@model List<SpaceSoftSolutions.Models.Task>
@{
    Layout = "EmployeeDashboard";
}

<h2>Tasks List</h2>
<input type="text" id="taskSearch" placeholder="Search tasks..." />
<button onclick="startVoiceSearch()">🎤</button>
<!-- عرض المهام -->
<table class="table" id="taskTable">
    <thead>
        <tr>
            <th>Task Name</th>
            <th>Description</th>
            <th>Start Date</th>
            <th>End Date</th>
            <th>Status</th>
            <th>Action</th> <!-- عمود لتغيير الحالة -->
        </tr>
    </thead>
    <tbody id="taskBody">
        @foreach (var task in Model)
        {
            <tr>
                <td>@task.TaskName</td>
                <td>@task.Description</td>
                <td>@task.StartDate.ToString("yyyy-MM-dd")</td>
                <td>@task.EndDate.ToString("yyyy-MM-dd")</td>
                <td>@task.Status</td>
                <td>
                    <!-- نموذج لتغيير الحالة -->
                    <form method="post" action="@Url.Action("emptaskk", "TTTT")">
                        <input type="hidden" name="Id" value="@task.Id" />

                        <!-- تم استخدام radio buttons بدلاً من checkboxes -->
                        <label>
                            <input type="radio" name="Status" value="To Do" @(task.Status == "To Do" ? "checked" : "") onchange="this.form.submit()" /> To Do
                        </label>
                        <label>
                            <input type="radio" name="Status" value="Doing" @(task.Status == "Doing" ? "checked" : "") onchange="this.form.submit()" /> Doing
                        </label>
                        <label>
                            <input type="radio" name="Status" value="Done" @(task.Status == "Done" ? "checked" : "") onchange="this.form.submit()" /> Done
                        </label>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>
<script>
    function startVoiceSearch() {
        if (!('webkitSpeechRecognition' in window)) {
            alert("Your browser does not support speech recognition.");
            return;
        }

        let recognition = new webkitSpeechRecognition();
        recognition.lang = 'en-US';
        recognition.start();

        recognition.onresult = function(event) {
            let searchQuery = event.results[0][0].transcript;
            document.getElementById("taskSearch").value = searchQuery;  // Keep input updated
            filterTasks(searchQuery);  // Filter the tasks
        };
    }

    function filterTasks(query) {
        let rows = document.querySelectorAll("#taskTable tbody tr");
        rows.forEach(row => {
            let taskName = row.cells[0].innerText.toLowerCase();
            // Check if task name matches the search query
            if (taskName.includes(query.toLowerCase())) {
                row.style.display = "";  // Show the row
            } else {
                row.style.display = "none";  // Hide the row
            }
        });
    }

    // Add listener for input field, so users can filter tasks manually as well
    document.getElementById("taskSearch").addEventListener("input", function() {
        filterTasks(this.value);
    });

        document.getElementById("taskSearch").addEventListener("input", function() {
        if (this.value.trim() === "") {
            // If search input is empty, show all tasks
            document.querySelectorAll("#taskTable tbody tr").forEach(row => row.style.display = "");
        } else {
            filterTasks(this.value);
        }
    });
</script>